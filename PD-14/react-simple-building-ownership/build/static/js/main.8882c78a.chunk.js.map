{"version":3,"sources":["app/nav/Nav.tsx","contracts/SimpleBuildingOwnership/ABI.ts","app/App.tsx","contracts/SimpleBuildingOwnership/ContractEns.ts","reportWebVitals.ts","index.tsx"],"names":["Nav","React","props","className","id","chainId","networkId","account","ABI","App","memo","web3","Web3","givenProvider","useState","eth","Contract","simpleBuildingOwnershipContract","setSimpleBuildingOwnershipContract","setChainId","setNetworkId","setAccount","getBuildingIndexInput","setGetBuildingIndexInput","getBuildingResult","setGetBuildingResult","getBuildingPartIdInput","setGetBuildingPartIdInput","getBuildingPartResult","setGetBuildingPartResult","addBuildingNameInput","setAddBuildingNameInput","addBuildingPartsInput","setAddBuildingPartsInput","addBuildingResult","setAddBuildingResult","isAddressValidatedInput","setIsAddressValidatedInput","isAddressValidatedResult","setIsAddressValidatedResult","fillBuildingPartBuildingIndexInput","setFillBuildingPartBuildingIndexInput","fillBuildingPartBuildingPartIndexInput","setFillBuildingPartBuildingPartIndexInput","fillBuildingPartStreetNameInput","setFillBuildingPartStreetNameInput","fillBuildingPartHouseNumberInput","setFillBuildingPartHouseNumberInput","fillBuildingPartPostalCodeInput","setFillBuildingPartPostalCodeInput","fillBuildingPartCityInput","setFillBuildingPartCityInput","fillBuildingPartBuildingPartOwnerInput","setFillBuildingPartBuildingPartOwnerInput","fillBuildingPartResult","setFillBuildingPartResult","useEffect","a","ens","getAddress","address","requestAccounts","newChain","newActs","fetchWeb3Data","addBuilding","buildingName","buildingParts","methods","send","from","catch","e","console","log","result","JSON","stringify","fillBuildingPart","buildingIndex","buildingPartIndex","streetName","houseNumber","postalCode","city","buildingPartOwner","value","isAddressValidated","buildingPartId","call","getBuildingPart","getBuilding","index","getChainId","net","getId","getAccounts","acts","onChange","target","type","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8882c78a.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { INavProps } from './INavProps';\r\n\r\nexport const Nav = React.memo((props: INavProps) => {\r\n\r\n    return <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <div className=\"navbar-brand\">Simple Building Ownership</div>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                </ul>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"nav-link\">ChainId: {props.chainId}</div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"nav-link\">NetworkId: {props.networkId}</div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"nav-link\">Account: {props.account}</div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </>\r\n});","import Web3Utils from 'web3-utils';\r\n\r\nexport const ABI: Array<Web3Utils.AbiItem> = [\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amountOfParts\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"fillPartsAuthority\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"NewBuilding\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"result\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"__callback\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"_myid\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_result\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"_proof\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"__callback\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingPartId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"isAddressValidated\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_partsCount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addBuilding\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingIndex\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingPartIndex\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartStreet\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartNumber\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartPostalCode\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartCity\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_buildingPartOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"fillBuildingPart\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingPartId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transferBuildingPartOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBuilding\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256[]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_id\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBuildingPart\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destruct\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n];","import React from 'react';\nimport './App.scss';\nimport Web3 from 'web3';\nimport { Nav } from './nav/Nav';\nimport { ContractEns } from '../contracts/SimpleBuildingOwnership/ContractEns';\nimport { ABI } from '../contracts/SimpleBuildingOwnership/ABI';\n\nexport const App = React.memo(() => {\n\n    const web3 = new Web3(Web3.givenProvider);\n    const [simpleBuildingOwnershipContract, setSimpleBuildingOwnershipContract] = React.useState(new web3.eth.Contract([])); \n\n    const [chainId, setChainId] = React.useState(0);\n    const [networkId, setNetworkId] = React.useState(0);\n    const [account, setAccount] = React.useState('');\n\n    const [getBuildingIndexInput, setGetBuildingIndexInput] = React.useState(0);\n    const [getBuildingResult, setGetBuildingResult] = React.useState('');\n\n    const [getBuildingPartIdInput, setGetBuildingPartIdInput] = React.useState(0);\n    const [getBuildingPartResult, setGetBuildingPartResult] = React.useState('');\n\n    const [addBuildingNameInput, setAddBuildingNameInput] = React.useState('');\n    const [addBuildingPartsInput, setAddBuildingPartsInput] = React.useState(0);\n    const [addBuildingResult, setAddBuildingResult] = React.useState('');\n\n    const [isAddressValidatedInput, setIsAddressValidatedInput] = React.useState(0);\n    const [isAddressValidatedResult, setIsAddressValidatedResult] = React.useState('');\n\n    const [fillBuildingPartBuildingIndexInput, setFillBuildingPartBuildingIndexInput] = React.useState(0);\n    const [fillBuildingPartBuildingPartIndexInput, setFillBuildingPartBuildingPartIndexInput] = React.useState(0);\n    const [fillBuildingPartStreetNameInput, setFillBuildingPartStreetNameInput] = React.useState('');\n    const [fillBuildingPartHouseNumberInput, setFillBuildingPartHouseNumberInput] = React.useState('');\n    const [fillBuildingPartPostalCodeInput, setFillBuildingPartPostalCodeInput] = React.useState('');\n    const [fillBuildingPartCityInput, setFillBuildingPartCityInput] = React.useState('');\n    const [fillBuildingPartBuildingPartOwnerInput, setFillBuildingPartBuildingPartOwnerInput] = React.useState('');\n    const [fillBuildingPartResult, setFillBuildingPartResult] = React.useState('');\n\n    React.useEffect(() => {\n        const fetchWeb3Data = async () => {\n            const address = await web3.eth.ens.getAddress(ContractEns);\n            setSimpleBuildingOwnershipContract(new web3.eth.Contract(ABI, address)); \n            await web3.eth.requestAccounts();\n            await newChain();\n            await newActs();\n        }\n        fetchWeb3Data();\n    }, []);\n\n    const addBuilding = async (buildingName: string, buildingParts: number) => {\n        let result = await simpleBuildingOwnershipContract.methods.addBuilding(buildingName, buildingParts).send({ from: account }).catch((e: any) => { console.log(e); });\n        setAddBuildingResult(JSON.stringify(result));\n    }\n\n    const fillBuildingPart = async (buildingIndex: number, buildingPartIndex: number, streetName: string, houseNumber: string, postalCode: string, city: string, buildingPartOwner: string) => {\n        let result = await simpleBuildingOwnershipContract.methods.fillBuildingPart(buildingIndex, buildingPartIndex, streetName, houseNumber, postalCode, city, buildingPartOwner).send({ from: account, value: 50000000000000000 }).catch((e: any) => { console.log(e); });\n        setFillBuildingPartResult(JSON.stringify(result));\n    }\n\n    const isAddressValidated = async (buildingPartId: number) => {\n        let result = await simpleBuildingOwnershipContract.methods.isAddressValidated(buildingPartId).call().catch((e: any) => { console.log(e); });\n        setIsAddressValidatedResult(JSON.stringify(result));\n    }\n\n    const getBuildingPart = async (id: number) => {\n        let result = await simpleBuildingOwnershipContract.methods.getBuildingPart(id).call().catch((e: any) => { console.log(e); });\n        setGetBuildingPartResult(JSON.stringify(result));\n    }\n\n    const getBuilding = async (index: number) => {\n        let result = await simpleBuildingOwnershipContract.methods.getBuilding(index).call().catch((e: any) => { console.log(e); });\n        setGetBuildingResult(JSON.stringify(result));\n    }\n\n    const newChain = async () => {\n        var chainId = await web3.eth.getChainId();\n        var networkId = await web3.eth.net.getId();\n        setChainId(chainId);\n        setNetworkId(networkId);\n    }\n\n    const newActs = async () => {\n        var acts = await web3.eth.getAccounts();\n        setAccount(acts[0]);\n    }\n\n    return <div className=\"app\">\n        <Nav chainId={chainId} networkId={networkId} account={account} />\n        <div className=\"app__flex-split\">\n            <div className=\"app__flex-split--half\">\n                <div className=\"app__block\">\n                    <div className=\"app__block--title display-4\">getBuilding</div>\n                    <div className=\"app__flex-split\">\n                        <input onChange={e => setGetBuildingIndexInput(+e.target.value)} type=\"number\" placeholder=\"index\" className=\"form-control app__block--input\" />\n                        <button onClick={() => getBuilding(getBuildingIndexInput)} type=\"button\" className=\"btn btn-primary app__block--button\">Send</button>\n                    </div>\n                    <div className=\"app__block--result\">{getBuildingResult}</div>\n                </div>\n                <div className=\"app__block\">\n                    <div className=\"app__block--title display-4\">getBuildingPart</div>\n                    <div className=\"app__flex-split\">\n                        <input onChange={e => setGetBuildingPartIdInput(+e.target.value)} type=\"number\" placeholder=\"id\" className=\"form-control app__block--input\" />\n                        <button onClick={() => getBuildingPart(getBuildingPartIdInput)} type=\"button\" className=\"btn btn-primary app__block--button\">Send</button>\n                    </div>\n                    <div className=\"app__block--result\">{getBuildingPartResult}</div>\n                </div>\n                <div className=\"app__block\">\n                    <div className=\"app__block--title display-4\">isAddressValidated</div>\n                    <div className=\"app__flex-split\">\n                        <input onChange={e => setIsAddressValidatedInput(+e.target.value)} type=\"number\" placeholder=\"id\" className=\"form-control app__block--input\" />\n                        <button onClick={() => isAddressValidated(isAddressValidatedInput)} type=\"button\" className=\"btn btn-primary app__block--button\">Send</button>\n                    </div>\n                    <div className=\"app__block--result\">{isAddressValidatedResult}</div>\n                </div>\n            </div>\n            <div className=\"app__flex-split--half\">\n                <div className=\"app__block\">\n                    <div className=\"app__block--title display-4\">addBuilding</div>\n                    <div className=\"app__flex-split\">\n                        <input onChange={e => setAddBuildingNameInput(e.target.value)} type=\"text\" placeholder=\"name\" className=\"form-control app__block--input\" />\n                        <input onChange={e => setAddBuildingPartsInput(+e.target.value)} type=\"number\" placeholder=\"parts\" className=\"form-control app__block--input\" />\n                        <button onClick={() => addBuilding(addBuildingNameInput, addBuildingPartsInput)} type=\"button\" className=\"btn btn-primary app__block--button\">Send</button>\n                    </div>\n                    <div className=\"app__block--result\">{addBuildingResult}</div>\n                </div>\n                <div className=\"app__block\">\n                    <div className=\"app__block--title display-4\">fillBuildingPart</div>\n                    <div className=\"app__flex-split\">\n                        <input onChange={e => setFillBuildingPartBuildingIndexInput(+e.target.value)} type=\"number\" placeholder=\"buildingIndex\" className=\"form-control app__block--input\" />\n                        <input onChange={e => setFillBuildingPartBuildingPartIndexInput(+e.target.value)} type=\"number\" placeholder=\"buildingPartIndex\" className=\"form-control app__block--input\" />\n                        <input onChange={e => setFillBuildingPartStreetNameInput(e.target.value)} type=\"text\" placeholder=\"streetName\" className=\"form-control app__block--input\" />\n                        <input onChange={e => setFillBuildingPartHouseNumberInput(e.target.value)} type=\"text\" placeholder=\"houseNumber\" className=\"form-control app__block--input\" />\n                        <input onChange={e => setFillBuildingPartPostalCodeInput(e.target.value)} type=\"text\" placeholder=\"postalCode\" className=\"form-control app__block--input\" />\n                        <input onChange={e => setFillBuildingPartCityInput(e.target.value)} type=\"text\" placeholder=\"city\" className=\"form-control app__block--input\" />\n                        <input onChange={e => setFillBuildingPartBuildingPartOwnerInput(e.target.value)} type=\"text\" placeholder=\"buildingPartOwner\" className=\"form-control app__block--input\" />\n                        <button onClick={() => fillBuildingPart(fillBuildingPartBuildingIndexInput, fillBuildingPartBuildingPartIndexInput, fillBuildingPartStreetNameInput, fillBuildingPartHouseNumberInput, fillBuildingPartPostalCodeInput, fillBuildingPartCityInput, fillBuildingPartBuildingPartOwnerInput)}\n                            type=\"button\" className=\"btn btn-primary app__block--button\">Send\n            </button>\n                    </div>\n                    <div className=\"app__block--result\">{fillBuildingPartResult}</div>\n                </div>\n            </div>\n        </div>\n    </div>\n});","export const ContractEns = 'contract.test.eth'; //rinkeby","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootswatch/dist/litera/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}