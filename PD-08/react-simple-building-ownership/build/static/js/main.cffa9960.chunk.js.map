{"version":3,"sources":["app/nav/Nav.tsx","contracts/SimpleBuildingOwnershipGanacheLocal/ABI.ts","app/App.tsx","contracts/SimpleBuildingOwnershipGanacheLocal/Address.ts","reportWebVitals.ts","index.tsx"],"names":["Nav","React","props","className","id","chainId","networkId","account","ABI","App","memo","web3","Web3","givenProvider","simpleBuildingOwnershipContract","eth","Contract","useState","setChainId","setNetworkId","setAccount","getBuildingIndexInput","setGetBuildingIndexInput","getBuildingResult","setGetBuildingResult","getBuildingPartIdInput","setGetBuildingPartIdInput","getBuildingPartResult","setGetBuildingPartResult","addBuildingNameInput","setAddBuildingNameInput","addBuildingPartsInput","setAddBuildingPartsInput","addBuildingResult","setAddBuildingResult","isAddressValidatedInput","setIsAddressValidatedInput","isAddressValidatedResult","setIsAddressValidatedResult","fillBuildingPartBuildingIndexInput","setFillBuildingPartBuildingIndexInput","fillBuildingPartBuildingPartIndexInput","setFillBuildingPartBuildingPartIndexInput","fillBuildingPartStreetNameInput","setFillBuildingPartStreetNameInput","fillBuildingPartHouseNumberInput","setFillBuildingPartHouseNumberInput","fillBuildingPartPostalCodeInput","setFillBuildingPartPostalCodeInput","fillBuildingPartBuildingPartOwnerInput","setFillBuildingPartBuildingPartOwnerInput","fillBuildingPartResult","setFillBuildingPartResult","useEffect","a","requestAccounts","newChain","newActs","fetchWeb3Data","addBuilding","buildingName","buildingParts","methods","send","from","catch","e","console","log","result","JSON","stringify","fillBuildingPart","buildingIndex","buildingPartIndex","streetName","houseNumber","postalCode","buildingPartOwner","isAddressValidated","buildingPartId","getBuildingPart","call","getBuilding","index","getChainId","net","getId","getAccounts","acts","events","NewBuilding","on","event","returnValues","error","onChange","target","value","type","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cffa9960.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { INavProps } from './INavProps';\r\n\r\nexport const Nav = React.memo((props: INavProps) => {\r\n\r\n    return <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <div className=\"navbar-brand\">Simple Building Ownership</div>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                </ul>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"nav-link\">ChainId: {props.chainId}</div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"nav-link\">NetworkId: {props.networkId}</div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"nav-link\">Account: {props.account}</div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </>\r\n});","import Web3Utils from 'web3-utils';\r\n\r\nexport const ABI: Array<Web3Utils.AbiItem> = [\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amountOfParts\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"fillPartsAuthority\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"NewBuilding\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"result\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"__callback\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"_myid\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_result\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"_proof\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"__callback\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingPartId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"isAddressValidated\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_partsCount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addBuilding\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingIndex\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingPartIndex\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartStreet\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartNumber\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartPostalCode\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_buildingPartOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"fillBuildingPart\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBuilding\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256[]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_id\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBuildingPart\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n];","import React from 'react';\nimport './App.scss';\nimport Web3 from 'web3';\nimport { Nav } from './nav/Nav';\nimport { address } from '../contracts/SimpleBuildingOwnershipGanacheLocal/Address';\nimport { ABI } from '../contracts/SimpleBuildingOwnershipGanacheLocal/ABI';\nimport { Contract } from 'web3-eth-contract';\n\nexport const App = React.memo(() => {\n\n  const web3 = new Web3(Web3.givenProvider);\n  const simpleBuildingOwnershipContract: Contract = new web3.eth.Contract(ABI, address);\n  \n  const [chainId, setChainId] = React.useState(0);\n  const [networkId, setNetworkId] = React.useState(0);\n  const [account, setAccount] = React.useState('');\n\n  const [getBuildingIndexInput, setGetBuildingIndexInput] = React.useState(0);\n  const [getBuildingResult, setGetBuildingResult] = React.useState('');\n\n  const [getBuildingPartIdInput, setGetBuildingPartIdInput] = React.useState(0);\n  const [getBuildingPartResult, setGetBuildingPartResult] = React.useState('');\n\n  const [addBuildingNameInput, setAddBuildingNameInput] = React.useState('');\n  const [addBuildingPartsInput, setAddBuildingPartsInput] = React.useState(0);\n  const [addBuildingResult, setAddBuildingResult] = React.useState('');\n\n  const [isAddressValidatedInput, setIsAddressValidatedInput] = React.useState(0);\n  const [isAddressValidatedResult, setIsAddressValidatedResult] = React.useState('');\n\n  const [fillBuildingPartBuildingIndexInput, setFillBuildingPartBuildingIndexInput] = React.useState(0);\n  const [fillBuildingPartBuildingPartIndexInput, setFillBuildingPartBuildingPartIndexInput] = React.useState(0);\n  const [fillBuildingPartStreetNameInput, setFillBuildingPartStreetNameInput] = React.useState('');\n  const [fillBuildingPartHouseNumberInput, setFillBuildingPartHouseNumberInput] = React.useState('');\n  const [fillBuildingPartPostalCodeInput, setFillBuildingPartPostalCodeInput] = React.useState('');\n  const [fillBuildingPartBuildingPartOwnerInput, setFillBuildingPartBuildingPartOwnerInput] = React.useState('');\n  const [fillBuildingPartResult, setFillBuildingPartResult] = React.useState('');\n\n  React.useEffect(() => {\n    const fetchWeb3Data = async () => {\n      await web3.eth.requestAccounts();\n      await newChain();\n      await newActs();\n    }\n    fetchWeb3Data();\n  }, []);\n\n  const addBuilding = async (buildingName: string, buildingParts: number) => {\n    let result = await simpleBuildingOwnershipContract.methods.addBuilding(buildingName, buildingParts).send({from: account}).catch((e: any) => { console.log(e); });\n    setAddBuildingResult(JSON.stringify(result));\n  }\n\n  const fillBuildingPart = async (buildingIndex: number, buildingPartIndex: number, streetName: string, houseNumber: string, postalCode: string, buildingPartOwner: string) => {\n    let result = await simpleBuildingOwnershipContract.methods.fillBuildingPart(buildingIndex, buildingPartIndex, streetName, houseNumber, postalCode, buildingPartOwner).send({from: account}).catch((e: any) => { console.log(e); });\n    setFillBuildingPartResult(JSON.stringify(result));\n  }\n\n  const isAddressValidated = async (buildingPartId: number) => {\n    let result = await simpleBuildingOwnershipContract.methods.isAddressValidated(buildingPartId);\n    setIsAddressValidatedResult(JSON.stringify(result));\n  }\n\n  const getBuildingPart = async (id: number) => {\n    let result = await simpleBuildingOwnershipContract.methods.getBuildingPart(id).call().catch((e: any) => { console.log(e); });\n    setGetBuildingPartResult(JSON.stringify(result));\n  }\n\n  const getBuilding = async (index: number) => {\n    let result = await simpleBuildingOwnershipContract.methods.getBuilding(index).call().catch((e: any) => { console.log(e); });\n    setGetBuildingResult(JSON.stringify(result));\n  }\n\n  const newChain = async () => {\n    var chainId = await web3.eth.getChainId();\n    var networkId = await web3.eth.net.getId();\n    setChainId(chainId);\n    setNetworkId(networkId);\n  }\n  \n  const newActs = async () => {\n    var acts = await web3.eth.getAccounts();\n    setAccount(acts[0]);\n  }\n\n  simpleBuildingOwnershipContract.events.NewBuilding()\n  .on('data', function(event: any){\n    console.log(event.returnValues);\n  })\n  .on('error', console.error);\n\n  return <div className=\"app\">\n    <Nav chainId={chainId} networkId={networkId} account={account} />\n    <div className=\"app__flex-split\">\n      <div className=\"app__flex-split--half\">\n        <div className=\"app__block\">\n          <div className=\"app__block--title display-4\">getBuilding</div>\n          <div className=\"app__flex-split\">\n            <input onChange={e => setGetBuildingIndexInput(+e.target.value)} type=\"number\" placeholder=\"index\" className=\"form-control app__block--input\" />\n            <button onClick={() => getBuilding(getBuildingIndexInput)} type=\"button\" className=\"btn btn-primary app__block--button\">Send</button>\n          </div>\n          <div className=\"app__block--result\">{getBuildingResult}</div>\n        </div>\n        <div className=\"app__block\">\n          <div className=\"app__block--title display-4\">getBuildingPart</div>\n          <div className=\"app__flex-split\">\n            <input onChange={e => setGetBuildingPartIdInput(+e.target.value)} type=\"number\" placeholder=\"id\" className=\"form-control app__block--input\" />\n            <button onClick={() => getBuildingPart(getBuildingPartIdInput)} type=\"button\" className=\"btn btn-primary app__block--button\">Send</button>\n          </div>\n          <div className=\"app__block--result\">{getBuildingPartResult}</div>\n        </div>\n        <div className=\"app__block\">\n          <div className=\"app__block--title display-4\">isAddressValidated</div>\n          <div className=\"app__flex-split\">\n            <input onChange={e => setIsAddressValidatedInput(+e.target.value)} type=\"number\" placeholder=\"id\" className=\"form-control app__block--input\" />\n            <button onClick={() => isAddressValidated(isAddressValidatedInput)} type=\"button\" className=\"btn btn-primary app__block--button\">Send</button>\n          </div>\n          <div className=\"app__block--result\">{isAddressValidatedResult}</div>\n        </div>\n      </div>\n      <div className=\"app__flex-split--half\">\n        <div className=\"app__block\">\n          <div className=\"app__block--title display-4\">addBuilding</div>\n          <div className=\"app__flex-split\">\n            <input onChange={e => setAddBuildingNameInput(e.target.value)} type=\"text\" placeholder=\"name\" className=\"form-control app__block--input\" />\n            <input onChange={e => setAddBuildingPartsInput(+e.target.value)} type=\"number\" placeholder=\"parts\" className=\"form-control app__block--input\" />\n            <button onClick={() => addBuilding(addBuildingNameInput, addBuildingPartsInput)} type=\"button\" className=\"btn btn-primary app__block--button\">Send</button>\n          </div>\n          <div className=\"app__block--result\">{addBuildingResult}</div>\n        </div>\n        <div className=\"app__block\">\n          <div className=\"app__block--title display-4\">fillBuildingPart</div>\n          <div className=\"app__flex-split\">\n            <input onChange={e => setFillBuildingPartBuildingIndexInput(+e.target.value)} type=\"number\" placeholder=\"buildingIndex\" className=\"form-control app__block--input\" />\n            <input onChange={e => setFillBuildingPartBuildingPartIndexInput(+e.target.value)} type=\"number\" placeholder=\"buildingPartIndex\" className=\"form-control app__block--input\" />\n            <input onChange={e => setFillBuildingPartStreetNameInput(e.target.value)} type=\"text\" placeholder=\"streetName\" className=\"form-control app__block--input\" />\n            <input onChange={e => setFillBuildingPartHouseNumberInput(e.target.value)} type=\"text\" placeholder=\"houseNumber\" className=\"form-control app__block--input\" />\n            <input onChange={e => setFillBuildingPartPostalCodeInput(e.target.value)} type=\"text\" placeholder=\"postalCode\" className=\"form-control app__block--input\" />\n            <input onChange={e => setFillBuildingPartBuildingPartOwnerInput(e.target.value)} type=\"text\" placeholder=\"buildingPartOwner\" className=\"form-control app__block--input\" />\n            <button onClick={() => fillBuildingPart(fillBuildingPartBuildingIndexInput, fillBuildingPartBuildingPartIndexInput, fillBuildingPartStreetNameInput, fillBuildingPartHouseNumberInput, fillBuildingPartPostalCodeInput, fillBuildingPartBuildingPartOwnerInput)} \n              type=\"button\" className=\"btn btn-primary app__block--button\">Send\n            </button>\n          </div>\n          <div className=\"app__block--result\">{fillBuildingPartResult}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n});","export const address = '0x4D8dd5E23a15Fc46B0aC5f8603D6CB42162684b8';","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootswatch/dist/litera/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}