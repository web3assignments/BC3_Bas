{"version":3,"sources":["app/nav/ActiveNavLinkType.ts","contracts/SimpleBuildingOwnership/ABI.ts","app/nav/Nav.tsx","contracts/SimpleBuildingOwnership/DTO/Building.ts","contracts/SimpleBuildingOwnership/DTO/BuildingPart.ts","contracts/SimpleBuildingOwnership/Classes/BuildingInfo.ts","app/home/Home.tsx","app/add-building/AddBuilding.tsx","app/transfer-ownership/TransferOwnership.tsx","app/App.tsx","contracts/SimpleBuildingOwnership/ContractEns.ts","reportWebVitals.ts","index.tsx"],"names":["ActiveNavLinkType","ABI","Nav","React","props","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeNavLink","AddBuilding","TransferOwnership","chainId","networkId","account","Building","name","buildingPartIds","owner","this","length","json","BuildingPart","streetName","houseNumber","postalCode","city","BuildingInfo","building","buildingParts","addressesValidated","Home","memo","useState","isLoading","setIsLoading","results","setResults","getBuildingIndexInput","setGetBuildingIndexInput","getBuildingPartIdInput","setGetBuildingPartIdInput","isAddressValidated","buildingPartId","a","simpleBuildingOwnershipContract","methods","call","catch","e","console","log","result","getBuildingPart","buildingPart","fromJson","addressValidated","getBuilding","index","Array","i","push","placeholder","onChange","target","value","min","onClick","isEmpty","map","toString","getBuildingResult","setGetBuildingResult","addBuildingNameInput","setAddBuildingNameInput","addBuildingPartsInput","setAddBuildingPartsInput","fillBuildingPartBuildingIndex","setFillBuildingPartBuildingIndex","fillBuildingPartStreetNameInput","setFillBuildingPartStreetNameInput","fillBuildingPartHouseNumberInput","setFillBuildingPartHouseNumberInput","fillBuildingPartPostalCodeInput","setFillBuildingPartPostalCodeInput","fillBuildingPartCityInput","setFillBuildingPartCityInput","fillBuildingPartBuildingPartOwnerInput","setFillBuildingPartBuildingPartOwnerInput","addBuilding","buildingName","send","from","events","NewBuilding","returnValues","fillBuildingPart","buildingIndex","buildingPartIndex","buildingPartOwner","isFillAuthority","filter","s","disabled","setBuildingPartId","newOwner","setNewOwner","isOwner","transferOwnership","transferBuildingPartOwnership","status","alert","App","web3","Web3","givenProvider","setSimpleBuildingOwnershipContract","setChainId","setNetworkId","setAccount","useEffect","eth","ens","getAddress","address","Contract","requestAccounts","newChain","newActs","fetchWeb3Data","getChainId","net","getId","getAccounts","acts","getBaseProps","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.209b4bb6.chunk.js","sourcesContent":["export enum ActiveNavLinkType {\r\n\r\n    Home = 0,\r\n    AddBuilding = 1,\r\n    TransferOwnership = 2\r\n}","import Web3Utils from 'web3-utils';\r\n\r\nexport const ABI: Array<Web3Utils.AbiItem> = [\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"index\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amountOfParts\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"fillPartsAuthority\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"NewBuilding\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"result\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"__callback\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"bytes32\",\r\n                \"name\": \"_myid\",\r\n                \"type\": \"bytes32\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_result\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes\",\r\n                \"name\": \"_proof\",\r\n                \"type\": \"bytes\"\r\n            }\r\n        ],\r\n        \"name\": \"__callback\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingPartId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"isAddressValidated\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_partsCount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"addBuilding\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingIndex\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingPartIndex\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartStreet\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartNumber\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartPostalCode\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_buildingPartCity\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_buildingPartOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"fillBuildingPart\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_buildingPartId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transferBuildingPartOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_index\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBuilding\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256[]\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_id\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getBuildingPart\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destruct\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n];","import * as React from 'react';\r\nimport { INavProps } from './INavProps';\r\nimport { ActiveNavLinkType } from './ActiveNavLinkType';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Nav = React.memo((props: INavProps) => {\r\n\r\n    return <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <Link className=\"btn navbar-brand\" to=\"/\">Simple Building Ownership</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className={`nav-item ${props.activeNavLink === ActiveNavLinkType.AddBuilding ? 'active' : ''}`}>\r\n                        <Link className=\"btn nav-link\" to=\"/add-building\">Add Building</Link>\r\n                    </li>\r\n                    <li className={`nav-item ${props.activeNavLink === ActiveNavLinkType.TransferOwnership ? 'active' : ''}`}>\r\n                        <Link className=\"btn nav-link\" to=\"/transfer-ownership\">Transfer Ownership</Link>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"nav-link\">ChainId: {props.chainId}</div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"nav-link\">NetworkId: {props.networkId}</div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"nav-link\">Account: {props.account}</div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </>\r\n});","export class Building {\r\n\r\n    public name: string;\r\n    public buildingPartIds: Array<number>;\r\n    public owner: string;\r\n\r\n    constructor(name: string, buildingPartIds: Array<number>, owner: string) {\r\n        this.name = name;\r\n        this.buildingPartIds = buildingPartIds;\r\n        this.owner = owner;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.name.length === 0 && this.buildingPartIds.length === 0 && this.owner.length === 0;\r\n    }\r\n\r\n    public static fromJson(json: any): Building {\r\n        try {\r\n            return new Building(json[0], json[1], json[2]);\r\n        } catch {\r\n            return new Building('', [], '');\r\n        }\r\n    }\r\n}","export class BuildingPart {\r\n\r\n    public owner: string;\r\n    public streetName: string;\r\n    public houseNumber: string;\r\n    public postalCode: string;\r\n    public city: string;\r\n\r\n    constructor(owner: string, streetName: string, houseNumber: string, postalCode: string, city: string) {\r\n        this.owner = owner;\r\n        this.streetName = streetName;\r\n        this.houseNumber = houseNumber;\r\n        this.postalCode = postalCode;\r\n        this.city = city;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return (this.owner.length === 0 || this.owner === '0x0000000000000000000000000000000000000000') && \r\n            this.streetName.length === 0 && this.houseNumber.length === 0 && \r\n            this.postalCode.length === 0 && this.city.length === 0;\r\n    }\r\n\r\n    public static fromJson(json: any): BuildingPart {\r\n        try {\r\n            return new BuildingPart(json[0], json[1], json[2], json[3], json[4]);\r\n        } catch {\r\n            return new BuildingPart('', '', '', '', '');\r\n        }\r\n    }\r\n}","import { Building } from \"../DTO/Building\";\r\nimport { BuildingPart } from \"../DTO/BuildingPart\";\r\n\r\nexport class BuildingInfo {\r\n\r\n    public building: Building;\r\n    public buildingParts: Array<BuildingPart>;\r\n    public addressesValidated: Array<boolean>;\r\n\r\n    constructor(building: Building, buildingParts: Array<BuildingPart>, addressesValidated: Array<boolean>) {\r\n        this.building = building;\r\n        this.buildingParts = buildingParts;\r\n        this.addressesValidated = addressesValidated;\r\n    }\r\n}","import React from \"react\";\r\nimport { ActiveNavLinkType } from \"../nav/ActiveNavLinkType\";\r\nimport { Nav } from \"../nav/Nav\";\r\nimport { IHomeProps } from \"./IHomeProps\";\r\nimport \"./Home.scss\";\r\nimport { Building } from \"../../contracts/SimpleBuildingOwnership/DTO/Building\";\r\nimport { BuildingPart } from \"../../contracts/SimpleBuildingOwnership/DTO/BuildingPart\";\r\nimport { BuildingInfo } from \"../../contracts/SimpleBuildingOwnership/Classes/BuildingInfo\";\r\n\r\nexport const Home = React.memo((props: IHomeProps) => {\r\n\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [results, setResults] = React.useState(new BuildingInfo(new Building('', [], ''), [], []));\r\n    const [getBuildingIndexInput, setGetBuildingIndexInput] = React.useState(0);\r\n    const [getBuildingPartIdInput, setGetBuildingPartIdInput] = React.useState(0);\r\n\r\n    const isAddressValidated = async (buildingPartId: number): Promise<boolean> => {\r\n        let result = await props.simpleBuildingOwnershipContract.methods.isAddressValidated(buildingPartId).call().catch((e: any) => { console.log(e); });\r\n        try {\r\n            return result as boolean;\r\n        } catch {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const getBuildingPart = async (id: number) => {\r\n        setIsLoading(true);\r\n        let result = await props.simpleBuildingOwnershipContract.methods.getBuildingPart(id).call().catch((e: any) => { console.log(e); });\r\n        let buildingPart = BuildingPart.fromJson(result);\r\n        let addressValidated = await isAddressValidated(id);\r\n        setResults(new BuildingInfo(new Building('', [], ''), [buildingPart], [addressValidated]));\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const getBuilding = async (index: number) => {\r\n        setIsLoading(true);\r\n        let result = await props.simpleBuildingOwnershipContract.methods.getBuilding(index).call().catch((e: any) => { console.log(e); });\r\n        let building = Building.fromJson(result);\r\n        let buildingParts = new Array<BuildingPart>();\r\n        let addressesValidated = new Array<boolean>();\r\n        for (let i = 0; i < building.buildingPartIds.length; i++) {\r\n            let result = await props.simpleBuildingOwnershipContract.methods.getBuildingPart(building.buildingPartIds[i]).call().catch((e: any) => { console.log(e); });\r\n            buildingParts.push(BuildingPart.fromJson(result));\r\n            let addressValidated = await isAddressValidated(building.buildingPartIds[i]);\r\n            addressesValidated.push(addressValidated);\r\n        }\r\n        setResults(new BuildingInfo(building, buildingParts, addressesValidated));\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return <>\r\n        <Nav chainId={props.chainId} networkId={props.networkId} account={props.account} activeNavLink={ActiveNavLinkType.Home} />\r\n        <div className=\"home\">\r\n            <div className=\"display-4\">Search building</div>\r\n            <div className=\"home__inputs\">\r\n                <div className=\"home__inputs--row\">\r\n                    <input className=\"form-control\" placeholder=\"Search for building by index\"\r\n                        type=\"number\" onChange={e => setGetBuildingIndexInput(+e.target.value)} min={0} />\r\n                    <button onClick={() => getBuilding(getBuildingIndexInput)} type=\"button\"\r\n                        className={`btn btn-primary home__button ${isLoading ? 'home__loading' : ''}`}>Send\r\n                    </button>\r\n                </div>\r\n                <div className=\"home__inputs--row\">\r\n                    <input className=\"form-control\" placeholder=\"Search for building part by id\"\r\n                        type=\"number\" onChange={e => setGetBuildingPartIdInput(+e.target.value)} min={0} />\r\n                    <button onClick={() => getBuildingPart(getBuildingPartIdInput)} type=\"button\"\r\n                        className={`btn btn-primary home__button ${isLoading ? 'home__loading' : ''}`}>Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {\r\n                results.buildingParts.length > 0 && !results.buildingParts[0].isEmpty() ? <>\r\n                    <div className=\"display-4\">Results</div>\r\n                    <div className={`home__result ${isLoading ? 'home__loading' : ''}`}>\r\n                        {\r\n                            results.building.isEmpty() ? <></> : <>\r\n                                <div className=\"home__row home__row--title\">\r\n                                    <div className=\"home__column--5\"></div>\r\n                                    <div className=\"home__column--40\">Name</div>\r\n                                    <div className=\"home__column--55\">Fill Authority</div>\r\n                                </div>\r\n                                <div className=\"home__row home__row\">\r\n                                    <div className=\"home__column--5\"></div>\r\n                                    <div className=\"home__column--40\">{results.building.name}</div>\r\n                                    <div className=\"home__column--55\">{results.building.owner}</div>\r\n                                </div>\r\n                                <div className=\"home__row home__row\">\r\n                                    <div className=\"home__column\"></div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                        <div className=\"home__row home__row--title\">\r\n                            <div className=\"home__column--5\">{results.building.isEmpty() ? '' : 'ID'}</div>\r\n                            <div className=\"home__column--40\">Owner</div>\r\n                            <div className=\"home__column--25\">Address</div>\r\n                            <div className=\"home__column--15\">Postal Code</div>\r\n                            <div className=\"home__column--15\">Address Validated</div>\r\n                        </div>\r\n                        {\r\n                            results.buildingParts.map((buildingPart: BuildingPart, index) => {\r\n                                return <div key={index} className=\"home__row\">\r\n                                    <div className=\"home__column--5\">{results.building?.buildingPartIds[index]?.toString()}</div>\r\n                                    <div className=\"home__column--40\">{buildingPart.owner}</div>\r\n                                    <div className=\"home__column--25\">{buildingPart.streetName + ' ' + buildingPart.houseNumber + ' ' + buildingPart.city}</div>\r\n                                    <div className=\"home__column--15\">{buildingPart.postalCode}</div>\r\n                                    <div className=\"home__column--15\">{results.addressesValidated[index]?.toString()}</div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </> : <></>\r\n            }\r\n        </div>\r\n    </>\r\n});","import React from \"react\";\r\nimport { ActiveNavLinkType } from \"../nav/ActiveNavLinkType\";\r\nimport { Nav } from \"../nav/Nav\";\r\nimport { IAddBuildingProps } from \"./IAddBuildingProps\";\r\nimport \"./AddBuilding.scss\";\r\nimport { Building } from \"../../contracts/SimpleBuildingOwnership/DTO/Building\";\r\n\r\nexport const AddBuilding = React.memo((props: IAddBuildingProps) => {\r\n\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n    const [getBuildingResult, setGetBuildingResult] = React.useState(new Building('', [], ''));\r\n    const [getBuildingIndexInput, setGetBuildingIndexInput] = React.useState(0);\r\n\r\n    const [addBuildingNameInput, setAddBuildingNameInput] = React.useState('');\r\n    const [addBuildingPartsInput, setAddBuildingPartsInput] = React.useState(0);\r\n    \r\n    const [fillBuildingPartBuildingIndex, setFillBuildingPartBuildingIndex] = React.useState(-1);\r\n    const [fillBuildingPartStreetNameInput, setFillBuildingPartStreetNameInput] = React.useState('');\r\n    const [fillBuildingPartHouseNumberInput, setFillBuildingPartHouseNumberInput] = React.useState('');\r\n    const [fillBuildingPartPostalCodeInput, setFillBuildingPartPostalCodeInput] = React.useState('');\r\n    const [fillBuildingPartCityInput, setFillBuildingPartCityInput] = React.useState('');\r\n    const [fillBuildingPartBuildingPartOwnerInput, setFillBuildingPartBuildingPartOwnerInput] = React.useState('');\r\n\r\n    const getBuilding = async (index: number) => {\r\n        setIsLoading(true);\r\n        let result = await props.simpleBuildingOwnershipContract.methods.getBuilding(index).call().catch((e: any) => { console.log(e); });\r\n        let building = Building.fromJson(result);\r\n        setGetBuildingResult(building);\r\n        building.buildingPartIds.length > 0 ? setFillBuildingPartBuildingIndex(index) : setFillBuildingPartBuildingIndex(-1);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const addBuilding = async (buildingName: string, buildingParts: number) => {\r\n        setIsLoading(true);\r\n        let result = await props.simpleBuildingOwnershipContract.methods.addBuilding(buildingName, buildingParts).send({ from: props.account }).catch((e: any) => { console.log(e); });\r\n        let index = -1;\r\n        try {\r\n            index = result.events.NewBuilding.returnValues.index;\r\n        } catch {\r\n            index = -1;\r\n        }\r\n        if (index > -1) {\r\n            getBuilding(index);\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const fillBuildingPart = async (buildingIndex: number, buildingPartIndex: number, streetName: string, houseNumber: string, postalCode: string, city: string, buildingPartOwner: string) => {\r\n        setIsLoading(true);\r\n        await props.simpleBuildingOwnershipContract.methods.fillBuildingPart(buildingIndex, buildingPartIndex, streetName, houseNumber, postalCode, city, buildingPartOwner).send({ from: props.account, value: 50000000000000000 }).catch((e: any) => { console.log(e); });\r\n        getBuilding(buildingIndex);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const isFillAuthority = (): boolean => {\r\n        return props.account === getBuildingResult.owner;\r\n    }\r\n\r\n    return <>\r\n        <Nav chainId={props.chainId} networkId={props.networkId} account={props.account} activeNavLink={ActiveNavLinkType.AddBuilding} />\r\n        <div className=\"add-building\">\r\n            <div className=\"display-4\">Add building</div>\r\n            <div className=\"add-building__inputs\">\r\n                <div className=\"add-building__inputs--row\">\r\n                    <input className=\"form-control add-building__margin-right\" placeholder=\"Name of building\"\r\n                        type=\"text\" onChange={e => setAddBuildingNameInput(e.target.value)} />\r\n                    <input className=\"form-control\" placeholder=\"Amount of ownable parts of building\"\r\n                        type=\"number\" onChange={e => setAddBuildingPartsInput(+e.target.value)} min={1} />\r\n                    <button onClick={() => addBuilding(addBuildingNameInput, addBuildingPartsInput)} type=\"button\"\r\n                        className={`btn btn-primary add-building__margin-left ${isLoading ? 'add-building__loading' : ''}`}>Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"display-4\">Building to fill</div>\r\n            <div className=\"add-building__inputs\">\r\n                <div className=\"add-building__inputs--row\">\r\n                    <input className=\"form-control\" placeholder=\"Search for building by index\"\r\n                        type=\"number\" onChange={e => setGetBuildingIndexInput(+e.target.value)} min={0} />\r\n                    <button onClick={() => getBuilding(getBuildingIndexInput)} type=\"button\"\r\n                        className={`btn btn-primary add-building__margin-left ${isLoading ? 'add-building__loading' : ''}`}>Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {\r\n                getBuildingResult.buildingPartIds.length > 0 ? <>\r\n                    <div className={`add-building__result ${isLoading ? 'add-building__loading' : ''}`}>         \r\n                        <div className=\"add-building__row add-building__row--title\">\r\n                            <div className=\"add-building__column--15 add-building__margin-left\">Filled parts</div>\r\n                            <div className=\"add-building__column--20 add-building__margin-left\">Name</div>\r\n                            <div className=\"add-building__column add-building__margin-left\">Fill Authority</div>\r\n                        </div>\r\n                        <div className=\"add-building__row add-building__row\">\r\n                            <div className=\"add-building__column--15 add-building__margin-left\">{getBuildingResult.buildingPartIds.filter(s => s > 0).length + '/' + getBuildingResult.buildingPartIds.length}</div>\r\n                            <div className=\"add-building__column--20 add-building__margin-left\">{getBuildingResult.name}</div>\r\n                            <div className={`add-building__column add-building__margin-left \r\n                                ${isFillAuthority() ? 'add-building__green' : 'add-building__red'}`}>\r\n                                    {getBuildingResult.owner}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"add-building__row add-building__row\">\r\n                            <div className=\"add-building__column\"></div>\r\n                        </div>\r\n                        <div className=\"add-building__row add-building__row--title\">\r\n                            <div className=\"add-building__column--20 add-building__margin-left\">Streetname</div>\r\n                            <div className=\"add-building__column--12 add-building__margin-left\">Housenumber</div>\r\n                            <div className=\"add-building__column--20 add-building__margin-left\">City</div>\r\n                            <div className=\"add-building__column--15 add-building__margin-left\">Postal Code</div>\r\n                            <div className=\"add-building__column--25 add-building__margin-left\">Owner</div>\r\n                            <div className=\"add-building__column--8 add-building__margin-left\"></div>\r\n                        </div>\r\n                        {\r\n                            getBuildingResult.buildingPartIds.map((buildingPart: number, index) => {\r\n                                return buildingPart > 0 ? <div key={index}></div> : <div key={index} className=\"add-building__row\">\r\n                                    <div className=\"add-building__column--20\">\r\n                                        <input className=\"form-control\" placeholder=\"Streetname\"\r\n                                            type=\"text\" onChange={e => setFillBuildingPartStreetNameInput(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"add-building__column--12\">\r\n                                        <input className=\"form-control\" placeholder=\"Housenumber\"\r\n                                            type=\"text\" onChange={e => setFillBuildingPartHouseNumberInput(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"add-building__column--20\">\r\n                                        <input className=\"form-control\" placeholder=\"City\"\r\n                                            type=\"text\" onChange={e => setFillBuildingPartCityInput(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"add-building__column--15\">\r\n                                        <input className=\"form-control\" placeholder=\"Postal code\"\r\n                                            type=\"text\" onChange={e => setFillBuildingPartPostalCodeInput(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"add-building__column--25\">\r\n                                        <input className=\"form-control\" placeholder=\"Owner\"\r\n                                            type=\"text\" onChange={e => setFillBuildingPartBuildingPartOwnerInput(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"add-building__column--8\">\r\n                                        <button disabled={!isFillAuthority()} onClick={() => fillBuildingPart(fillBuildingPartBuildingIndex, index, \r\n                                            fillBuildingPartStreetNameInput, fillBuildingPartHouseNumberInput, \r\n                                            fillBuildingPartPostalCodeInput, fillBuildingPartCityInput, fillBuildingPartBuildingPartOwnerInput)} \r\n                                            type=\"button\" className={`btn btn-primary add-building__button ${isLoading ? 'add-building__loading' : ''}`}>Send\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </> : <></>\r\n            }\r\n        </div>\r\n    </>\r\n});","import React from \"react\";\r\nimport { BuildingPart } from \"../../contracts/SimpleBuildingOwnership/DTO/BuildingPart\";\r\nimport { ActiveNavLinkType } from \"../nav/ActiveNavLinkType\";\r\nimport { Nav } from \"../nav/Nav\";\r\nimport { ITransferOwnershipProps } from \"./ITransferOwnershipProps\";\r\nimport \"./TransferOwnership.scss\";\r\n\r\nexport const TransferOwnership = React.memo((props: ITransferOwnershipProps) => {\r\n\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [buildingPartId, setBuildingPartId] = React.useState(0);\r\n    const [newOwner, setNewOwner] = React.useState('');\r\n\r\n    const isOwner = async (id: number): Promise<boolean> => {\r\n        let result = await props.simpleBuildingOwnershipContract.methods.getBuildingPart(id).call().catch((e: any) => { console.log(e); });\r\n        let buildingPart = BuildingPart.fromJson(result);\r\n        return buildingPart.owner === props.account;\r\n    }\r\n\r\n    const transferOwnership = async (id: number, newOwner: string) => {\r\n        setIsLoading(true);\r\n        if (await isOwner(id)) {\r\n            let result = await props.simpleBuildingOwnershipContract.methods.transferBuildingPartOwnership(id, newOwner).send({ from: props.account }).catch((e: any) => { console.log(e); });\r\n            try {\r\n                let success = result.status;\r\n                if (success) { \r\n                    alert('Successfully transferred ownership of building part with id: ' + id);\r\n                }\r\n            } catch {\r\n                console.log('Something went wrong');\r\n            }\r\n        } else {\r\n            alert('You can only transfer ownership of your own possessions');\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return <>\r\n        <Nav chainId={props.chainId} networkId={props.networkId} account={props.account} activeNavLink={ActiveNavLinkType.TransferOwnership} />\r\n        <div className=\"transfer-ownership\">\r\n            <div className=\"display-4\">Transfer ownership</div>\r\n            <div className=\"transfer-ownership__inputs\">\r\n                <div className=\"transfer-ownership__inputs--row\">\r\n                    <input className=\"form-control transfer-ownership__margin-right\" placeholder=\"Building part id\"\r\n                        type=\"number\" min={1} onChange={e => setBuildingPartId(+e.target.value)} />\r\n                    <input className=\"form-control\" placeholder=\"New owner of building part\"\r\n                        type=\"text\" onChange={e => setNewOwner(e.target.value)} />\r\n                    <button onClick={() => transferOwnership(buildingPartId, newOwner)} type=\"button\"\r\n                        className={`btn btn-primary transfer-ownership__margin-left ${isLoading ? 'transfer-ownership__loading' : ''}`}>Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n});","import React from 'react';\nimport './App.scss';\nimport Web3 from 'web3';\nimport { ContractEns } from '../contracts/SimpleBuildingOwnership/ContractEns';\nimport { ABI } from '../contracts/SimpleBuildingOwnership/ABI';\nimport { Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\nimport history from '../history';\nimport { Home } from './home/Home';\nimport { AddBuilding } from './add-building/AddBuilding';\nimport { TransferOwnership } from './transfer-ownership/TransferOwnership';\n\nexport const App = React.memo(() => {\n\n    const web3 = new Web3(Web3.givenProvider);\n    const [simpleBuildingOwnershipContract, setSimpleBuildingOwnershipContract] = React.useState<any>();\n\n    const [chainId, setChainId] = React.useState(0);\n    const [networkId, setNetworkId] = React.useState(0);\n    const [account, setAccount] = React.useState('');\n\n    React.useEffect(() => {\n        const fetchWeb3Data = async () => {\n            const address = await web3.eth.ens.getAddress(ContractEns);\n            setSimpleBuildingOwnershipContract(new web3.eth.Contract(ABI, address));\n            await web3.eth.requestAccounts();\n            await newChain();\n            await newActs();\n        }\n        fetchWeb3Data();\n    }, []);\n\n    const newChain = async () => {\n        var chainId = await web3.eth.getChainId();\n        var networkId = await web3.eth.net.getId();\n        setChainId(chainId);\n        setNetworkId(networkId);\n    }\n\n    const newActs = async () => {\n        var acts = await web3.eth.getAccounts();\n        setAccount(acts[0]);\n    }\n\n    const getBaseProps = () => {\n        return {web3, simpleBuildingOwnershipContract, chainId, networkId, account}\n    }\n\n    return <HashRouter>\n        <Switch>\n            <Route exact path=\"/\" render={() => <Home {...getBaseProps()} />} />\n            <Route exact path=\"/add-building\" render={() => <AddBuilding {...getBaseProps()} />} />\n            <Route exact path=\"/transfer-ownership\" render={() => <TransferOwnership {...getBaseProps()} />} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </HashRouter>\n});","export const ContractEns = 'contract.test.eth'; //rinkeby","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootswatch/dist/litera/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}